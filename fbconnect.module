<?php

/**
 * @file
 * @todo.
 */

use Facebook\Facebook;
use Facebook\Authentication\AccessToken;

/**
 * Implements hook_menu().
 */
function fbconnect_menu() {
  $items['admin/config/people/fbconnect'] = array(
    'title' => 'Facebook Connect',
    'description' => 'Configure required settings for Facebook integration',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('fbconnect_api_keys_settings'),
    'access arguments' => array('administer site configuration'),
    'file' => 'fbconnect.admin.inc',
  );

  $items['admin/config/people/fbconnect/api-keys'] = array(
    'title' => 'Api Keys',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'file' => 'fbconnect.admin.inc',
  );

  return $items;
}

/**
 * Implements hook_libraries_info().
 */
function fbconnect_libraries_info() {
  // Returns an associative array, with information about external library
  $libraries['facebook-php-sdk'] = array(
    'name' => 'Facebook PHP SDK',
    'vendor url' => 'https://github.com/facebook/facebook-php-sdk-v4',
    'download url' => 'https://github.com/facebook/facebook-php-sdk-v4/archive/5.0.0.zip',
    'version' => '5.0.0',
    // supported library version, including relevant files
    'files' => array(
      'php' => array(
        'src/Facebook/autoload.php',
      ),
    ),
  );

  return $libraries;
}

/**
 * Locates and loads the Facebook PHP SDK library.
 */
function _facebook_client_load_include() {
  if (!class_exists('Facebook\Facebook')) {
    if (function_exists('libraries_load')) {
      $library = libraries_load('facebook-php-sdk');
    }
    else {
      $sdk_path = DRUPAL_ROOT . '/sites/all/libraries/facebook-php-sdk/src/Facebook/autoload.php';
      $library = array('loaded' => file_exists($sdk_path));
      if ($library['loaded']) {
        require_once $sdk_path;
      }
    }

    if (!$library['loaded']) {
      watchdog('fbconnect', 'Unable to load the required Facebook library, please check the README.txt for instructions on how to resolve this.');
    }
  }

  return class_exists('Facebook\Facebook') && defined('Facebook\Facebook::VERSION');
}

/**
 * Get the Facebook client object for easy access.
 * @return Facebook
 *   Facebook Api object
 */
function fbconnect_client() {
  static $fb = NULL;

  drupal_session_initialize();

  if (is_null($fb)) {
    $conf = fbconnect_get_config();
    if ($conf && _facebook_client_load_include()) {
      $initParams = array(
        'app_id' => $conf['app_id'],
        'app_secret' => $conf['secret_api_key'],
        'default_graph_version' => 'v2.4',
      );

      $fb = new Facebook($initParams);
    }
  }

  return $fb;
}

/**
 * Get the Facebook access token object for easy access.
 */
function fbconnect_access_token() {
  static $token = NULL;

  $fb = facebook_client();
  $facebook_config = fbconnect_get_config();

  if (!empty($_SESSION['SESSfbconnect'])) {
    $token = new AccessToken($_SESSION['SESSfbconnect']);
  }
  else {
    try {
      $helper = $fb->getJavaScriptHelper();
      $token = $helper->getAccessToken();
    }
    catch (Exception $e) {
      $token = NULL;
      setcookie('SESSfbconnect' . $facebook_config['app_id'], '');
    }
  }

  if (!empty($token)) {
    try {
      $request = $fb->get('/me', $token);
      $_SESSION['fbconnect'] = $token->getValue();
      setcookie('SESSfbconnect' . $facebook_config['app_id'], $token->getValue());
    }
    catch (Exception $e) {
      $token = NULL;
      setcookie('SESSfbconnect' . $facebook_config['app_id'], '');
    }
  }
  else {
    setcookie('SESSfbconnect' . $facebook_config['app_id'], '');
  }

  return $token;
}

/**
 * Get fbconnect config parameter.
 * @return array
 */
function fbconnect_get_config() {
  static $config = array();

  if (!$config) {
    $config['app_id'] = variable_get('fbconnect_appid', NULL);
    $config['secret_api_key'] = variable_get('fbconnect_skey', NULL);
    drupal_alter('fbconnect_config', $config);
  }

  return $config;
}

/**
 * Implements hook_page_alter().
 */
function fbconnect_page_alter(&$page) {
  if (facebook_client() && !_fbconnect_is_excluded_page($_GET['q']) && !variable_get('fbconnect_noroot')) {
    $config = fbconnect_get_config();

    drupal_add_js(array(
      'fbconnect' => array(
        'appId' => $config['app_id'],
      )),
      'setting');
    drupal_add_js(drupal_get_path('module', 'fbconnect') . '/fbconnect.js');
  }
}

/**
 * Helper: Check exclude pages
 */
function _fbconnect_is_excluded_page($path) {
  return drupal_match_path($path, variable_get('fbconnect_exclude_patterns', ''));
}
